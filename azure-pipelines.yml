pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'
  codeCoverageExclude: ""\"[*]Microsoft.*,[*]System.*,[xunit*]*\"""

steps:
- script: |
    dotnet build --configuration $(buildConfiguration)

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: test
    arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude=$(codeCoverageExclude)'
    projects: 'test/**/*.csproj'
    nobuild: true

- script: |
    dotnet tool install -g dotnet-reportgenerator-globaltool
    reportgenerator -reports:$(Build.SourcesDirectory)/test/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
  displayName: Create Code coverage report

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: False
    projects: 'src/LuckyDrawBot/LuckyDrawBot.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
